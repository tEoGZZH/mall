<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.winemall.mall.mapper.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.winemall.mall.pojo.Address" >
    <id column="ADDR_ID" property="addrId" jdbcType="BIGINT" />
    <result column="PHONE" property="phone" jdbcType="CHAR" />
    <result column="PROVINCE" property="province" jdbcType="VARCHAR" />
    <result column="CIRY" property="ciry" jdbcType="VARCHAR" />
    <result column="SECTION" property="section" jdbcType="VARCHAR" />
    <result column="DETAIL" property="detail" jdbcType="VARCHAR" />
    <result column="RECEIVE_NAME" property="receiveName" jdbcType="VARCHAR" />
    <result column="RECEIVE_PHONE" property="receivePhone" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.winemall.mall.pojo.Address" extends="BaseResultMap" >
    <result column="IS_DEFAULT" property="isDefault" jdbcType="BINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ADDR_ID, PHONE, PROVINCE, CIRY, SECTION, DETAIL, RECEIVE_NAME, RECEIVE_PHONE
  </sql>
  <sql id="Blob_Column_List" >
    IS_DEFAULT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.winemall.mall.pojo.AddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from MIKE.ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.winemall.mall.pojo.AddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MIKE.ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from MIKE.ADDRESS
    where ADDR_ID = #{addrId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from MIKE.ADDRESS
    where ADDR_ID = #{addrId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.winemall.mall.pojo.AddressExample" >
    delete from MIKE.ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.winemall.mall.pojo.Address" >
    insert into MIKE.ADDRESS (ADDR_ID, PHONE, PROVINCE, 
      CIRY, SECTION, DETAIL, 
      RECEIVE_NAME, RECEIVE_PHONE, IS_DEFAULT
      )
    values (#{addrId,jdbcType=BIGINT}, #{phone,jdbcType=CHAR}, #{province,jdbcType=VARCHAR}, 
      #{ciry,jdbcType=VARCHAR}, #{section,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{receiveName,jdbcType=VARCHAR}, #{receivePhone,jdbcType=CHAR}, #{isDefault,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.winemall.mall.pojo.Address" >
    insert into MIKE.ADDRESS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addrId != null" >
        ADDR_ID,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="province != null" >
        PROVINCE,
      </if>
      <if test="ciry != null" >
        CIRY,
      </if>
      <if test="section != null" >
        SECTION,
      </if>
      <if test="detail != null" >
        DETAIL,
      </if>
      <if test="receiveName != null" >
        RECEIVE_NAME,
      </if>
      <if test="receivePhone != null" >
        RECEIVE_PHONE,
      </if>
      <if test="isDefault != null" >
        IS_DEFAULT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addrId != null" >
        #{addrId,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="ciry != null" >
        #{ciry,jdbcType=VARCHAR},
      </if>
      <if test="section != null" >
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null" >
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null" >
        #{receivePhone,jdbcType=CHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.winemall.mall.pojo.AddressExample" resultType="java.lang.Integer" >
    select count(*) from MIKE.ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update MIKE.ADDRESS
    <set >
      <if test="record.addrId != null" >
        ADDR_ID = #{record.addrId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.province != null" >
        PROVINCE = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.ciry != null" >
        CIRY = #{record.ciry,jdbcType=VARCHAR},
      </if>
      <if test="record.section != null" >
        SECTION = #{record.section,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null" >
        DETAIL = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveName != null" >
        RECEIVE_NAME = #{record.receiveName,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePhone != null" >
        RECEIVE_PHONE = #{record.receivePhone,jdbcType=CHAR},
      </if>
      <if test="record.isDefault != null" >
        IS_DEFAULT = #{record.isDefault,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update MIKE.ADDRESS
    set ADDR_ID = #{record.addrId,jdbcType=BIGINT},
      PHONE = #{record.phone,jdbcType=CHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CIRY = #{record.ciry,jdbcType=VARCHAR},
      SECTION = #{record.section,jdbcType=VARCHAR},
      DETAIL = #{record.detail,jdbcType=VARCHAR},
      RECEIVE_NAME = #{record.receiveName,jdbcType=VARCHAR},
      RECEIVE_PHONE = #{record.receivePhone,jdbcType=CHAR},
      IS_DEFAULT = #{record.isDefault,jdbcType=BINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update MIKE.ADDRESS
    set ADDR_ID = #{record.addrId,jdbcType=BIGINT},
      PHONE = #{record.phone,jdbcType=CHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CIRY = #{record.ciry,jdbcType=VARCHAR},
      SECTION = #{record.section,jdbcType=VARCHAR},
      DETAIL = #{record.detail,jdbcType=VARCHAR},
      RECEIVE_NAME = #{record.receiveName,jdbcType=VARCHAR},
      RECEIVE_PHONE = #{record.receivePhone,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.winemall.mall.pojo.Address" >
    update MIKE.ADDRESS
    <set >
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=CHAR},
      </if>
      <if test="province != null" >
        PROVINCE = #{province,jdbcType=VARCHAR},
      </if>
      <if test="ciry != null" >
        CIRY = #{ciry,jdbcType=VARCHAR},
      </if>
      <if test="section != null" >
        SECTION = #{section,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        DETAIL = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null" >
        RECEIVE_NAME = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receivePhone != null" >
        RECEIVE_PHONE = #{receivePhone,jdbcType=CHAR},
      </if>
      <if test="isDefault != null" >
        IS_DEFAULT = #{isDefault,jdbcType=BINARY},
      </if>
    </set>
    where ADDR_ID = #{addrId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.winemall.mall.pojo.Address" >
    update MIKE.ADDRESS
    set PHONE = #{phone,jdbcType=CHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CIRY = #{ciry,jdbcType=VARCHAR},
      SECTION = #{section,jdbcType=VARCHAR},
      DETAIL = #{detail,jdbcType=VARCHAR},
      RECEIVE_NAME = #{receiveName,jdbcType=VARCHAR},
      RECEIVE_PHONE = #{receivePhone,jdbcType=CHAR},
      IS_DEFAULT = #{isDefault,jdbcType=BINARY}
    where ADDR_ID = #{addrId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.winemall.mall.pojo.Address" >
    update MIKE.ADDRESS
    set PHONE = #{phone,jdbcType=CHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CIRY = #{ciry,jdbcType=VARCHAR},
      SECTION = #{section,jdbcType=VARCHAR},
      DETAIL = #{detail,jdbcType=VARCHAR},
      RECEIVE_NAME = #{receiveName,jdbcType=VARCHAR},
      RECEIVE_PHONE = #{receivePhone,jdbcType=CHAR}
    where ADDR_ID = #{addrId,jdbcType=BIGINT}
  </update>
</mapper>